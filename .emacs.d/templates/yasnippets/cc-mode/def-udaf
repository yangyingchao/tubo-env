# -*- mode: snippet; require-final-newline: nil -*-
# name: def-udaf
# key: dfuda
# --
/*
  Usage:

  DROP FUNCTION ${1:func};
  CREATE AGGREGATE FUNCTION $1 RETURNS ${2:S}${2:$(cond ((string= "S" yas-text) "TRING")
                  ((string= "I" yas-text) "NTEGER")
                  ((string= "R" yas-text) "EAL")
                  (t "")
                  )} SONAME 'libxxx.so';
 */
my_bool $1_init(UDF_INIT *initid, UDF_ARGS *args, char *message);
void $1_deinit(UDF_INIT *initid);
void $1_clear( UDF_INIT* initid, char* is_null, char *error);
void $1_free_mem_self(UDF_INIT* initid);
void $1_add( UDF_INIT* initid, UDF_ARGS* args, char* is_null, char *error);
${2:$(cond ((string= "S" yas-text) "char*")
                  ((string= "I" yas-text) "long long")
                  ((string= "R" yas-text) "double")
                  (t "")
                  )}
$1(UDF_INIT *initid, UDF_ARGS *args, ${2:$(if (string= "S" yas-text) "char *result, unsigned long *length," "")}char *is_null, char *error);
