* Imported Feeds            :elfeed:
** Books                                                             :books:
*** [[https://feeds.feedburner.com/bookfere][书伴]]
** Linux                                                             :linux:
*** [[https://linuxtoy.org/feeds/all.atom.xml][LinuxTOY]]
*** [[http://www.phoronix.com/rss.php][Phoronix]]
*** [[http://www.linuxjournal.com/node/feed][Linux Journal]]
*** [[http://linuxperf.com/?feed=rss2][Linux Performance]]
** emacs                                                             :emacs:
*** [[https://emacs-china.org/latest.rss][Emacs China]]
*** [[http://feeds.feedburner.com/sachac][sacha chua]]
*** [[https://nullprogram.com/feed/][Null Program]]
*** [[http://www.reddit.com/r/emacs/.rss][Reddit]]
*** [[https://emacsair.me/feed.xml][emacs-air]]
** Video                                                             :video:
*** [[http://feeds.feedburner.com/tedtalks_video][TED Talks]]
** 媒体
*** [[http://sspai.me/feed][少数派]]
*** [[http://feed.williamlong.info][月光博客]]
*** [[http://weiwuhui.com/feed][扯氮集]]
* 技术
*** [[http://www.allthingsdistributed.com/atom.xml][All Things Distributed]]
*** [[http://feeds.feedburner.com/tualatrix][I'm TualatriX]]
*** [[http://www.udpwork.com/feed][IT牛人博客聚合网站]]
*** [[http://lwn.net/headlines/newrss][LWN.net]]
*** [[http://www.mikeash.com/pyblog/rss.py?mode=fulltext][NSBlog]]
*** [[http://blog.codingnow.com/atom.xml][云风的 BLOG]]
*** [[http://timyang.net/feed/][后端技术 by Tim Yang]]
*** [[http://coolshell.cn/feed/][酷 壳 – CoolShell]]
*** [[https://hack.org/mc/blog/index.xml][mc]]
*** [[https://cjting.me/index.xml][cjting]]
*** [[https://manateelazycat.github.io/feed.xml][懒猫]]
*** [[https://www.ideawu.net/blog/feed][ideawu]]

** 技术与人文
*** [[http://www.ruanyifeng.com/blog/atom.xml][阮一峰的网络日志]]
** Database                                                       :database:
*** [[http://mysql.taobao.org/monthly/feed.xml][数据库内核月报]]

* Function to help find out dead feeds

#+BEGIN_SRC emacs-lisp -r
  (defun +rss-dead-feeds (&optional years)
    "Return a list of feeds that haven't posted anything in YEARS."
    (let* ((years (or years 1.0))
           (living-feeds (make-hash-table :test 'equal))
           (seconds (* years 365.0 24 60 60 2))
           (threshold (- (float-time) seconds)))
      (with-elfeed-db-visit (entry feed)
        (let ((date (elfeed-entry-date entry)))
          (when (> date threshold)
            (setf (gethash (elfeed-feed-url feed) living-feeds) t))))
      (cl-loop for url in (elfeed-feed-list)
               unless (gethash url living-feeds)
               collect url)))
  (+rss-dead-feeds)
#+END_SRC
